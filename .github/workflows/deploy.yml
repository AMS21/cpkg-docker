name: Deploy

on:
  schedule:
    - cron: '0 4 * * 0' # At 04:00 on Sunday
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  attestations: write
  contents: read
  id-token: write
  packages: write

jobs:
  push_to_registry:
    name: Push (${{ matrix.cfg.base }}-${{ matrix.cfg.tag_name }})
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false

      matrix:
        cfg:
          # Manjaro
          - { base: "manjaro", tag: "latest", tag_name: "latest", extra_args: "" }

          # Ubuntu
          - { base: "ubuntu", tag: "24.04",         tag_name: "24.04", extra_args: "" }
          - { base: "ubuntu", tag: "23.10",         tag_name: "23.10", extra_args: "" }
          - { base: "ubuntu", tag: "23.04",         tag_name: "23.04", extra_args: "" }
          - { base: "ubuntu", tag: "22.10",         tag_name: "22.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "22.04",         tag_name: "22.04", extra_args: "" }
          - { base: "ubuntu", tag: "21.10",         tag_name: "21.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "21.04",         tag_name: "21.04", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "20.10",         tag_name: "20.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "20.04",         tag_name: "20.04", extra_args: "" }
          - { base: "ubuntu", tag: "19.10",         tag_name: "19.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "19.04",         tag_name: "19.04", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "18.10",         tag_name: "18.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "18.04",         tag_name: "18.04", extra_args: "" }
          - { base: "ubuntu", tag: "17.10",         tag_name: "17.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "17.04",         tag_name: "17.04", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "16.10",         tag_name: "16.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "16.04",         tag_name: "16.04", extra_args: "" }
          - { base: "ubuntu", tag: "wily-20160526", tag_name: "15.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "15.04",         tag_name: "15.04", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "14.10",         tag_name: "14.10", extra_args: "OLD_RELEASE=true" }
          - { base: "ubuntu", tag: "14.04",         tag_name: "14.04", extra_args: "" }

    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          # list of Docker images to use as base name for tags
          images: |
            ams21/cpkg-docker
            ghcr.io/ams21/cpkg-docker
          flavor: |
            latest=false
            prefix=
            suffix=
          # generate Docker tags based on the following events/attributes
          tags: |
            type=raw,value=${{ matrix.cfg.base }}-${{ matrix.cfg.tag_name }}

      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: ./
          build-args: |
           TAG=${{ matrix.cfg.tag }}
           ${{ matrix.cfg.extra_args }}
          file: ./${{ matrix.cfg.base }}.dockerfile
          push: true
          platforms: "linux/amd64"
          annotations: ${{ steps.meta.outputs.annotations }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Attest Docker Hub
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: index.docker.io/ams21/cpkg-docker
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Attest GitHub Container Registry
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ghcr.io/ams21/cpkg-docker
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true
